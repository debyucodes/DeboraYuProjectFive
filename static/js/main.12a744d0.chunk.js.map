{"version":3,"sources":["Matches.js","Chat.js","firebase.js","App.js","serviceWorker.js","index.js"],"names":["Matches","id","className","href","icon","faAngleLeft","faComments","src","this","props","dog1","alt","dog2","dog3","dog4","dog","Component","Chat","class","onClick","reportClick","faFlag","messages","map","oneOfTheMessages","key","item","action","htmlFor","onChange","handleChange","type","name","placeholder","value","userInput","handleClick","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","App","handleLike","newCounter","state","counter","setState","results","url","event","target","preventDefault","database","ref","push","deleteMessage","message","child","remove","axios","method","responseType","params","api_key","format","hasImage","limit","then","console","log","data","on","response","val","newMessagesArray","alert","faCog","faPaw","dislikeClick","faTimes","faHeart","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.12a744d0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleLeft , faComments } from '@fortawesome/free-solid-svg-icons';\n\nclass Matches extends Component {\n  render() {\n    return(\n      <div id=\"match\">\n\n        <div className=\"instruction\">\n          <h3>Instructions:</h3>\n          <p>Ahh! I see you're talking to more than one pup at a time, you player! Since our app is very wholesome, we encourage you to only chat with one dog at a time.. by encourage, we mean you can only chat with Floofy.</p>\n        </div>\n      \n\n        <div className=\"matchContainer\">\n              <nav>\n                <a href=\"#main\" className=\"paw\">\n                  <FontAwesomeIcon icon={ faAngleLeft } />\n                </a>\n                <h1>\n                  <FontAwesomeIcon icon={ faComments } />\n                </h1>\n                \n                <div>\n                  {/* empty div for aesthetic */}\n                </div>\n              </nav>\n\n              <h2>New Matches</h2>\n              <ul className=\"topBar\">\n                <li className=\"circleImage\">\n                  <img src={this.props.dog1} alt={''}></img>\n                  <p>92 Likes</p>\n                </li>\n                <li className=\"circleImage\">\n                  <img src={this.props.dog2} alt={''}></img>\n                  <p>Smol Doge</p>\n                </li>\n                <li className=\"circleImage\">\n                  <img src={this.props.dog3} alt={''}></img>\n                  <p>Borky Boi</p>\n                </li>\n                <li className=\"circleImage\">\n                  <img src={this.props.dog4} alt={''}></img>\n                  <p>Ruff Furry</p>\n                </li>            \n              </ul>\n\n              <h2>Messages</h2>\n              <div className=\"messages\">\n\n                <a href=\"#sendMessage\" className=\"match\">\n                  <div className=\"circleImage\">\n                      <img src={this.props.dog} alt={''}></img>\n                  </div>\n                  <div className=\"matchText\">\n                    <h3>Floofy Floofer</h3>\n                    <p>woof!</p>\n                  </div>\n                </a>\n\n                <a href=\"#sendMessage\" className=\"match\">\n                  <div className=\"circleImage\">\n                      <img src={this.props.dog} alt={''}></img>\n                  </div>\n                  <div className=\"matchText\">\n                    <h3>Floofy Wet Nose</h3>\n                    <p>woof!</p>\n                  </div>\n                </a>\n\n                <a href=\"#sendMessage\" className=\"match\">\n                  <div className=\"circleImage\">\n                      <img src={this.props.dog} alt={''}></img>\n                  </div>\n                  <div className=\"matchText\">\n                    <h3>Boop The Floofy</h3>\n                    <p>woof!</p>\n                  </div>\n                </a>\n\n                <a href=\"#sendMessage\" className=\"match\">\n                  <div className=\"circleImage\">\n                      <img src={this.props.dog} alt={''}></img>\n                  </div>\n                  <div className=\"matchText\">\n                    <h3>Floofy Pawsome</h3>\n                    <p>woof!</p>\n                  </div>\n                </a>\n                \n              </div>\n\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Matches;","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleLeft, faFlag, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nclass Chat extends Component {\n  render() {\n    return(\n      <div id=\"sendMessage\">\n\n        <div className=\"instruction\">\n          <h3>Instructions:</h3>\n          <p>Congrats! Looks like you are in a chat with the love of your life. Here's your chance to drop your goodest pick-up lines to your pawnderella. If you are having second thoughts, click \"back\" button to go back to main page to match with another pup. Yikes!</p>\n        </div>\n        <div className=\"chatContainer\">\n            <nav>\n              <a class=\"navButton\" href=\"#main\">\n                <FontAwesomeIcon icon={ faAngleLeft } />\n              </a>\n\n              <div className=\"circleImage\">\n                <img src={this.props.dog} alt={''}></img>\n              </div>\n              <button onClick={this.props.reportClick} className=\"report\">\n                <FontAwesomeIcon icon={ faFlag } />\n              </button>           \n            </nav>\n\n            <div className=\"dogTalk\">\n              <div className=\"circleImage\">\n                <img src={this.props.dog} alt={''}></img>\n              </div>\n              <div className=\"whatDogSaid\">\n                <p>woof woof woof</p>\n              </div>\n            </div>\n\n              <ul className=\"sentMessage\">\n                {this.props.messages.map( (oneOfTheMessages) => {\n                  return(\n                    <li key={oneOfTheMessages.item}>\n                      <p>{oneOfTheMessages}</p>\n                    </li>\n                  )\n                  })\n                }\n              </ul>\n\n            <form className=\"whatYouSay\" action=\"submit\">\n\n              <label htmlFor=\"userInput\" className=\"sr-only\">Message\n              </label>\n\n              <input onChange={this.props.handleChange} type=\"text\" name=\"userInput\" placeholder=\"Message\" value={this.props.userInput} id=\"userInput\"></input>\n\n              <button onClick={this.props.handleClick }className=\"sendButton\">Send</button>\n\n            </form>\n          </div>\n        </div>\n\n\n    )\n  }\n}\n\nexport default Chat;","import firebase from 'firebase';\nimport 'firebase/database';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDgwbll9hSlsbiliaH18MRVYE7x3qbDmtg\",\n  authDomain: \"paw-nder.firebaseapp.com\",\n  databaseURL: \"https://paw-nder.firebaseio.com\",\n  projectId: \"paw-nder\",\n  storageBucket: \"paw-nder.appspot.com\",\n  messagingSenderId: \"918769295297\",\n  appId: \"1:918769295297:web:5ac34a73d9dd67243bd940\",\n  measurementId: \"G-HP3P01MVGG\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nexport default firebase;\n","import React, { Component } from 'react';\nimport Matches from './Matches';\nimport Chat from './Chat';\nimport './App.css';\n\nimport axios from 'axios';\nimport firebase from './firebase';\n\nimport {\n  BrowserRouter as Router, \n  Route, \n  Link\n} from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPaw , faComments , faCog , faAngleLeft, faFlag, faTimes , faHeart } from '@fortawesome/free-solid-svg-icons';\n\n\n// The dog API - key: 8769c416-f65c-4a98-9456-5478f789a049\n\n// Use axios to make API call\n// Put return from the API call into state\n  // - constructor with this.state\n// Prompt a random image of dog, and user can up or down vote the image\n// Voting system to upvote or downvote a dog photo - prompt \"you're a monster\" when user downvote \n// Make a search bar for user to search by breed\n// style to look similar to dating apps, display dog image and breed name etc \n//Every time you like a photo, toggle \"it's a match overlay\" alert \n\n\n//my attempt to make an axios call \nclass App extends Component {\n  constructor() {\n    super();\n    //create an array for easier access specific data\n    this.state ={\n      dog: [],\n      results: [],\n      counter: 0,\n      messages: [],\n      userInput: '',\n    }\n  }\n\n  // make an axios call to api to search for a random dog to display on page\n  componentDidMount() {\n    axios({\n      url: 'https://api.thedogapi.com/v1/images/search',\n      method: 'GET',\n      responseType: 'json',\n      params: {\n        api_key: '8769c416-f65c-4a98-9456-5478f789a049',\n        format: 'json',\n        hasImage: true,\n        limit: 100,\n      }\n    }).then((results) => {\n      console.log(results);\n      console.log(results.data[0].url);\n\n      this.setState({\n        dog: results.data[this.state.counter].url,\n        results: results.data,\n        dog1: results.data[91].url,\n        dog2: results.data[92].url,\n        dog3: results.data[93].url,\n        dog4: results.data[94].url\n      })\n    })\n\n    // Use firebase to store messages\n    const dbRef = firebase.database().ref();\n\n    dbRef.on('value', (response) => {\n      const data = response.val();\n      const newMessagesArray = [];\n\n      // Use a for in loop to iterate through our object\n      for (let item in data) {\n        newMessagesArray.push(data[item]);\n      }\n\n      this.setState({\n        messages: newMessagesArray\n      })\n    \n    });\n    \n  }\n\n  //Like button\n  handleLike = () => {\n    const newCounter = this.state.counter + 1;    \n    this.setState({     \n      counter: newCounter,\n      dog: this.state.results[this.state.counter].url,\n    })\n\n  }\n\n  //handleChange for user input\n  handleChange = (event) => {\n    this.setState({\n      userInput: event.target.value,\n    })\n  }\n\n  //handleClick to submit\n  handleClick = (event) => {\n    event.preventDefault();\n    const dbRef = firebase.database().ref();\n    dbRef.push(this.state.userInput);\n    \n    this.setState({\n      userInput: ''\n    })\n  }\n\n  //Button to delete a message\n  deleteMessage = (message) => {\n    const dbRef = firebase.database().ref();\n    dbRef.child(message).remove();\n  }\n\n  //dislike button\n  dislikeClick(){\n    alert(\"Well, you're a monster\");\n  }\n\n\n  // report button in message page\n  reportClick(){\n    alert('What is wrong with you? How can you report a dog.')\n  }\n\n\n\n  render() {\n    \n    return (\n      <Router>\n\n        <div className=\"App\">\n\n          {/* HOME PAGE */}\n          <div className=\"instruction\">\n            <h3>Instructions:</h3>\n            <p>Press the \"like\" button to go through our card stack of beautiful puppers. Once you have the pup you like, click on the \"chat\" button to slide into their DM and make a move!</p>\n          </div>\n\n          <div id=\"main\" className=\"mainContainer\">\n            <nav>\n              <a className=\"setting\">\n                <FontAwesomeIcon icon={ faCog } />\n              </a>\n              <h1> paw<FontAwesomeIcon icon={ faPaw } />nder </h1>\n              <a href=\"#match\" className=\"chatButton\">\n                <FontAwesomeIcon icon={ faComments } />\n              </a>\n            </nav>\n            \n            {/* MAIN IMAGE */}\n            <div className=\"imageContainer\">\n              <img src={this.state.dog} alt={''}></img >\n            </div>\n\n            {/* LIKE/DISLIKE BUTTONS */}\n            <div>\n              <button className=\"dislike\" onClick={this.dislikeClick}>\n                <FontAwesomeIcon icon={faTimes} />\n              </button>\n\n              <button onClick={this.handleLike}className=\"like\"> \n                <FontAwesomeIcon icon={ faHeart } />\n              </button>\n            </div>\n\n          </div>   \n\n          {/* MATCH PAGE */}\n\n          <Matches dog={this.state.dog} dog1={this.state.dog1} dog2={this.state.dog2} dog3={this.state.dog3} dog4={this.state.dog4}/>\n\n          {/* CHAT PAGE */}\n\n          <Chat dog={this.state.dog}  reportClick={this.reportClick} messages={this.state.messages} handleChange={this.handleChange} handleClick={this.handleClick} userInput={this.state.userInput} />\n\n        </div>\n      </Router>\n\n    );\n\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}