{"version":3,"sources":["Button.js","firebase.js","App.js","serviceWorker.js","index.js"],"names":["Button","getAPI","axios","url","method","responseType","params","api_key","format","hasImage","then","results","console","log","data","setState","dog","state","alert","className","onClick","this","dislikeClick","icon","faTimes","faHeart","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","App","handleChange","event","userInput","target","value","handleClick","preventDefault","database","ref","push","messages","on","response","val","newMessagesArray","item","id","faCog","faPaw","href","faComments","src","alt","name","faAngleLeft","reportClick","faFlag","class","map","oneOfTheMessages","action","htmlFor","onChange","type","placeholder","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2caa564f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeart , faTimes } from '@fortawesome/free-solid-svg-icons';\n\n\nclass Button extends Component {\n  constructor() {\n    super();\n    this.state ={\n      dog: [],\n    }\n    // this.getAPI = this.getAPI.bind(this);\n  }\n\n  dislikeClick(){\n    alert(\"Well, you're a monster\");\n  }\n\n  // refreshPage() {\n  //   window.location.reload(false);\n  \n  // function to make another API call\n  getAPI = () => {\n\n    axios({\n      url: 'https://api.thedogapi.com/v1/images/search',\n      method: 'GET',\n      responseType: 'json',\n      params: {\n        api_key: '8769c416-f65c-4a98-9456-5478f789a049',\n        format: 'json',\n        hasImage: true,\n      }\n    }).then((results) => {\n      console.log(results);\n      console.log(results.data[0].url);\n\n      this.setState({\n        dog: results.data[0],\n      })\n    })\n\n  }\n\n  // function to clear the previous image and fetch a new one\n\n\n  render() {\n    return(\n      <div>\n        <button className=\"dislike\" onClick={this.dislikeClick}>\n          <FontAwesomeIcon icon={faTimes} />\n        </button>\n\n        <button onClick={this.getAPI}className=\"like\"> \n          <FontAwesomeIcon icon={faHeart} />\n        </button>\n\n      </div>\n    )\n  }\n}\n\nexport default Button;","import firebase from 'firebase';\nimport 'firebase/database';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDgwbll9hSlsbiliaH18MRVYE7x3qbDmtg\",\n  authDomain: \"paw-nder.firebaseapp.com\",\n  databaseURL: \"https://paw-nder.firebaseio.com\",\n  projectId: \"paw-nder\",\n  storageBucket: \"paw-nder.appspot.com\",\n  messagingSenderId: \"918769295297\",\n  appId: \"1:918769295297:web:5ac34a73d9dd67243bd940\",\n  measurementId: \"G-HP3P01MVGG\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nexport default firebase;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Button from './Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPaw , faComments , faCog , faAngleLeft, faFlag} from '@fortawesome/free-solid-svg-icons';\nimport firebase from './firebase';\n// import Chat from './Chat';\n\n\n// The dog API - key: 8769c416-f65c-4a98-9456-5478f789a049\n\n// Use axios to make API call\n// Put return from the API call into state\n  // - constructor with this.state\n// Prompt a random image of dog, and user can up or down vote the image\n// Voting system to upvote or downvote a dog photo - prompt \"you're a monster\" when user downvote \n// Make a search bar for user to search by breed\n// style to look similar to dating apps, display dog image and breed name etc \n//Every time you like a photo, toggle \"it's a match overlay\" alert \n\n\n//my attempt to make an axios call \nclass App extends Component {\n  constructor() {\n    super();\n    //create an array for easier access specific data\n    this.state ={\n      dog: [],\n      messages: [],\n      userInput: '',\n    }\n  }\n\n  // library.add()\n\n\n  // make an axios call to api to search for a random dog to display on page\n  componentDidMount() {\n    axios({\n      url: 'https://api.thedogapi.com/v1/images/search',\n      method: 'GET',\n      responseType: 'json',\n      params: {\n        api_key: '8769c416-f65c-4a98-9456-5478f789a049',\n        format: 'json',\n        hasImage: true,\n      }\n    }).then((results) => {\n      console.log(results);\n      console.log(results.data[0].url);\n\n      this.setState({\n        dog: results.data[0],\n      })\n    })\n\n    // Use firebase to store messages\n    const dbRef = firebase.database().ref();\n\n    dbRef.on('value', (response) => {\n      console.log(response.val() );\n\n      const data = response.val();\n\n      const newMessagesArray = [];\n\n      // Use a for in loop to iterate through our object\n      for (let item in data) {\n        newMessagesArray.push(data[item]);\n      }\n\n      this.setState({\n        messages: newMessagesArray\n      })\n    \n    });\n    \n  }\n\n  //handleChange for user input\n  handleChange = (event) => {\n    this.setState({\n      userInput: event.target.value,\n    })\n\n    console.log(event.target.value)\n  }\n\n  //handleClick to submit\n  handleClick = (event) => {\n    event.preventDefault();\n    const dbRef = firebase.database().ref();\n    dbRef.push(this.state.userInput);\n\n    this.setState({\n      userInput: \"\"\n    })\n  }\n\n\n  // report button in message page\n  reportClick(){\n    alert('What is wrong with you? How can you report a dog.')\n  }\n\n\n  render() {\n    \n    return (\n      <div className=\"App\">\n\n        <div id=\"main\" className=\"mainContainer\">\n          <nav>\n            <a className=\"setting\">\n              <FontAwesomeIcon icon={ faCog } />\n            </a>\n            <h1> paw<FontAwesomeIcon icon={ faPaw } />nder </h1>\n            <a href=\"#chat\" className=\"chat\">\n              <FontAwesomeIcon icon={ faComments } />\n            </a>\n          </nav>\n\n\n          \n          <div className=\"imageContainer\">\n            <img src={this.state.dog.url} alt={''}></img >\n          </div>\n          <h2>{this.state.dog.name}</h2>\n          <Button /> \n        </div>    \n\n        {/* <Chat /> */}\n\n        <div id=\"chat\" className=\"chatContainer\">\n            <nav>\n              <a href=\"#main\" className=\"paw\">\n                <FontAwesomeIcon icon={ faPaw } />\n              </a>\n              <h1>\n                <FontAwesomeIcon icon={ faComments } />\n              </h1>\n              \n              <div>\n                {/* empty div for aesthetic */}\n              </div>\n            </nav>\n\n            <h2>New Matches</h2>\n            <ul className=\"topBar\">\n              <li className=\"circleImage\">\n                <img src={this.state.dog.url} alt={''}></img>\n                <p>92 Likes</p>\n              </li>\n              <li className=\"circleImage\">\n                <img src={this.state.dog.url} alt={''}></img>\n                <p>dog 1</p>\n              </li>\n              <li className=\"circleImage\">\n                <img src={this.state.dog.url} alt={''}></img>\n                <p>dog 2</p>\n              </li>\n              <li className=\"circleImage\">\n                <img src={this.state.dog.url} alt={''}></img>\n                <p>dog 3</p>\n              </li>            \n            </ul>\n\n            <h2>Messages</h2>\n            <div className=\"messages\">\n              <a href=\"#sendMessage\" className=\"match\">\n                <div className=\"circleImage\">\n                    <img src={this.state.dog.url} alt={''}></img>\n                </div>\n                <div className=\"matchText\">\n                  <h3>Smol Doge</h3>\n                  <p>woof!</p>\n                </div>\n              </a>\n\n              <a href=\"#sendMessage\" className=\"match\">\n                <div className=\"circleImage\">\n                    <img src={this.state.dog.url} alt={''}></img>\n                </div>\n                <div className=\"matchText\">\n                  <h3>Pawsome Ruff</h3>\n                  <p>woof!</p>\n                </div>\n              </a>\n\n              <a href=\"#sendMessage\" className=\"match\">\n                <div className=\"circleImage\">\n                    <img src={this.state.dog.url} alt={''}></img>\n                </div>\n                <div className=\"matchText\">\n                  <h3>Fluffy Floofer</h3>\n                  <p>woof!</p>\n                </div>\n              </a>\n\n              <a href=\"#sendMessage\" className=\"match\">\n                <div className=\"circleImage\">\n                    <img src={this.state.dog.url} alt={''}></img>\n                </div>\n                <div className=\"matchText\">\n                  <h3>Borky Boi</h3>\n                  <p>woof!</p>\n                </div>\n              </a>\n\n              <a href=\"#sendMessage\" className=\"match\">\n                <div className=\"circleImage\">\n                    <img src={this.state.dog.url} alt={''}></img>\n                </div>\n                <div className=\"matchText\">\n                  <h3>Wet Snout</h3>\n                  <p>woof!</p>\n                </div>\n              </a>\n              \n            </div>\n\n      </div>\n\n      <div id=\"sendMessage\" className=\"sendMessage\">\n        <nav>\n          <a href=\"#chat\">\n            <FontAwesomeIcon icon={ faAngleLeft } />\n          </a>\n\n          <div className=\"circleImage\">\n            <img src={this.state.dog.url} alt={''}></img>\n          </div>\n          <button onClick={this.reportClick} className=\"report\">\n            <FontAwesomeIcon icon={ faFlag } />\n          </button>\n          \n        </nav>\n\n        <div className=\"dogTalk\">\n          <div className=\"circleImage\">\n            <img src={this.state.dog.url} alt={''}></img>\n          </div>\n          <div className=\"whatDogSaid\">\n            <p>woof woof woof</p>\n          </div>\n        </div>\n\n          <ul class=\"sentMessage\">\n            {this.state.messages.map( (oneOfTheMessages) => {\n              return(\n                <li >\n                  <p>{oneOfTheMessages}</p>\n                </li>\n              )\n              })\n            }\n          </ul>\n\n        <form className=\"whatYouSay\" action=\"submit\">\n\n          <label htmlFor=\"userInput\" className=\"sr-only\">Message\n          </label>\n\n          <input onChange={this.handleChange} type=\"text\" name=\"userInput\" placeholder=\"Message\" id=\"userInput\"></input>\n\n          <button onClick={this.handleClick }className=\"sendButton\">Send</button>\n\n        </form>\n\n      </div>\n      \n      </div>\n\n\n\n    );\n\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}